import * as Lit from '../../../ui/lit/lit.js';
import * as Dialogs from '../dialogs/dialogs.js';
import { type MenuItemValue } from './Menu.js';
type TitleCallback = () => Lit.TemplateResult;
class SelectMenu extends HTMLElement {
    #private;
    get buttonTitle(): string | TitleCallback;
    set buttonTitle(buttonTitle: string | TitleCallback);
    get position(): Dialogs.Dialog.DialogVerticalPosition;
    set position(position: Dialogs.Dialog.DialogVerticalPosition);
    get horizontalAlignment(): Dialogs.Dialog.DialogHorizontalAlignment;
    set horizontalAlignment(horizontalAlignment: Dialogs.Dialog.DialogHorizontalAlignment);
    get showArrow(): boolean;
    set showArrow(showArrow: boolean);
    get sideButton(): boolean;
    set sideButton(sideButton: boolean);
    get disabled(): boolean;
    set disabled(disabled: boolean);
    get showDivider(): boolean;
    set showDivider(showDivider: boolean);
    get showSelectedItem(): boolean;
    set showSelectedItem(showSelectedItem: boolean);
    get jslogContext(): string;
    set jslogContext(jslogContext: string);
    connectedCallback(): void;
    click(): void;
}
class SelectMenuButton extends HTMLElement {
    #private;
    connectedCallback(): void;
    get showArrow(): boolean;
    set showArrow(showArrow: boolean);
    get arrowDirection(): Dialogs.Dialog.DialogVerticalPosition;
    set arrowDirection(arrowDirection: Dialogs.Dialog.DialogVerticalPosition);
    get disabled(): boolean;
    set disabled(disabled: boolean);
    set open(open: boolean);
    set singleArrow(singleArrow: boolean);
    get jslogContext(): string;
    set jslogContext(jslogContext: string);
    click(): void;
}
declare global {
    interface HTMLElementTagNameMap {
        'devtools-select-menu': SelectMenu;
        'devtools-select-menu-button': SelectMenuButton;
    }
    interface HTMLElementEventMap {
        [SelectMenuItemSelectedEvent.eventName]: SelectMenuItemSelectedEvent;
    }
}
class SelectMenuItemSelectedEvent extends Event {
    itemValue: SelectMenuItemValue;
    static readonly eventName = "selectmenuselected";
    constructor(itemValue: SelectMenuItemValue);
}
type SelectMenuItemValue = MenuItemValue;

// auto-generated by tsr to preserve module declaration as augmentation
// this may not be necessary if an import statement exists
export {};
