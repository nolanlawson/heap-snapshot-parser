import type * as puppeteer from 'puppeteer-core';
export declare const reloadDockableFrontEnd: () => Promise<void>;
export declare const deviceModeIsEnabled: () => Promise<boolean>;
export declare const clickDeviceModeToggler: () => Promise<void>;
export declare const openDeviceToolbar: () => Promise<void>;
export declare const showMediaQueryInspector: () => Promise<void>;
export declare const startEmulationWithDualScreenPage: () => Promise<void>;
export declare const getButtonDisabled: (spanButton: puppeteer.ElementHandle<HTMLButtonElement>) => Promise<boolean>;
export declare const clickDevicesDropDown: () => Promise<void>;
export declare const clickDevicePostureDropDown: () => Promise<void>;
export declare const clickZoomDropDown: () => Promise<void>;
export declare const clickWidthInput: () => Promise<void>;
export declare const selectToggleButton: () => Promise<puppeteer.ElementHandle<HTMLButtonElement>>;
export declare const selectEdit: () => Promise<void>;
export declare const selectDevice: (name: string) => Promise<void>;
export declare const selectTestDevice: () => Promise<void>;
export declare const selectDualScreen: () => Promise<void>;
export declare const selectFoldableDevice: () => Promise<void>;
export declare const waitForZoomDropDownNotExpanded: () => Promise<void>;
export declare const clickDevicePosture: (name: string) => Promise<void>;
export declare const getDevicePostureDropDown: () => Promise<puppeteer.ElementHandle<HTMLButtonElement>>;
export declare const clickToggleButton: () => Promise<void>;
export declare const getWidthOfDevice: () => Promise<string>;
export declare const getZoom: () => Promise<string>;
export declare const toggleAutoAdjustZoom: () => Promise<void>;
export declare const selectNonDualScreenDevice: () => Promise<void>;
